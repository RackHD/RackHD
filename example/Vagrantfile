######################
# Vagrant File Start #
######################

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    
    # MONORAIL SERVER
    config.vm.define "dev" do |target|
        target.vm.box = "rackhd/rackhd"
        target.vm.provider "virtualbox" do |v|
            v.memory = 4096
            v.cpus = 4
            v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        end

        # Create a public network, which generally matched to bridged network.
        # Bridged networks make the machine appear as another physical device on
        # your network.
        # target.vm.network :public_network
        if ENV['WORKSPACE']
          target.vm.synced_folder "#{ENV['WORKSPACE']}/build-deps", "/home/vagrant/src/"
          target.vm.synced_folder "#{ENV['WORKSPACE']}/build-config", "/home/vagrant/src/build-config"
          if ENV['MULTI'] =="true"
            target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/build"
            for repo in ENV['REPO_NAME'].split(' ')
              if repo != "rackhd"
                target.vm.synced_folder "#{ENV['WORKSPACE']}/#{repo}", "/home/vagrant/src/#{repo}"
              end
            end
            if ENV['REPO_NAME'].include? "on-tasks"
              target.vm.synced_folder "#{ENV['WORKSPACE']}/on-tasks", "/home/vagrant/src/on-taskgraph/node_modules/on-tasks/" 
              target.vm.synced_folder "#{ENV['WORKSPACE']}/on-tasks", "/home/vagrant/src/on-http/node_modules/on-tasks/" 
            end
            if ENV['REPO_NAME'].include? "on-core"
              target.vm.synced_folder "#{ENV['WORKSPACE']}/on-core", "/home/vagrant/src/on-taskgraph/node_modules/on-core/"  
              target.vm.synced_folder "#{ENV['WORKSPACE']}/on-core", "/home/vagrant/src/on-http/node_modules/on-core/" 
              target.vm.synced_folder "#{ENV['WORKSPACE']}/on-core", "/home/vagrant/src/on-tftp/node_modules/on-core/" 
              target.vm.synced_folder "#{ENV['WORKSPACE']}/on-core", "/home/vagrant/src/on-dhcp-proxy/node_modules/on-core/" 
            end
          else
            if ENV['REPO_NAME']
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/#{ENV['REPO_NAME']}"
            end
            if ENV['REPO_NAME'] == "on-tasks"
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/on-taskgraph/node_modules/on-tasks/" 
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/on-http/node_modules/on-tasks/" 
            end
            if ENV['REPO_NAME'] == "on-core"
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/on-taskgraph/node_modules/on-core/"  
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/on-http/node_modules/on-core/" 
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/on-tftp/node_modules/on-core/" 
              target.vm.synced_folder "#{ENV['WORKSPACE']}/build", "/home/vagrant/src/on-dhcp-proxy/node_modules/on-core/" 
            end
          end
        end
        
        if ENV['CONFIG_DIR']
          target.vm.synced_folder "#{ENV['WORKSPACE']}/#{ENV['CONFIG_DIR']}", "/opt/monorail/"
          target.vm.synced_folder "#{ENV['WORKSPACE']}/#{ENV['CONFIG_DIR']}", "/opt/onrack/etc/"
          target.vm.synced_folder "#{ENV['WORKSPACE']}/#{ENV['CONFIG_DIR']}", "/home/vagrant/opt/monorail/"
        end

        if ENV['TEST_GROUP']		
          if ENV['TEST_GROUP'] =~  /esxi-5-5-min-install.v2.0.test/ || ENV['TEST_GROUP'] =~  /esxi-5-5-max-install.v2.0.test/		
            config.vm.provision "file", source: "./dhcpd.conf", destination: "~/dhcpd.conf"		
            config.vm.provision "shell" do |s|		
            s.inline = "cp /home/vagrant/dhcpd.conf /etc/dhcp"		
            s.privileged = true		
            end		
          end		
        end
        if ENV['PYTHON_REPOS']
          config.vm.provision "file", source: "./rackhd-pm2-config.yml", destination: "~/rackhd-pm2-config.yml"
          config.vm.provision "shell" do |s|		
            s.inline = "apt-get install python-pip -y"		
            s.privileged = true
         end
          list = ENV['PYTHON_REPOS'].split(' ')
          list && list.each do |repo|
            config.vm.provision "shell" do |s|		
            s.inline = "cd /home/vagrant/src/#{repo} && pip install -r requirements.txt"		
            s.privileged = true
            end
          end
        end
        
        # Specify optional interface to bridge when wanting to expose the instance to an
        # external network.  Useful for when discovering nodes externally.
        if ENV['BRIDGE_INTF']
          target.vm.network "public_network", ip: "172.31.128.1", bridge: "em1"
        else
          target.vm.network "private_network", ip: "172.31.128.1", virtualbox__intnet: "closednet"
        end
        target.vm.network "forwarded_port", guest: 8080, host: 9090
        target.vm.network "forwarded_port", guest: 5672, host: 9091
        target.vm.network "forwarded_port", guest: 9080, host: 9092
        target.vm.network "forwarded_port", guest: 8443, host: 9093
        #usc-service
        target.vm.network "forwarded_port", guest: 7080, host: 7080
        
        # If true, then any SSH connections made will enable agent forwarding.
        # Default value: false
        target.ssh.forward_agent = true

        target.vm.provision "shell", inline: <<-SHELL
          timeout=0
          maxto=30
          waitForPM2Daemon() {
            while [ ${timeout} != ${maxto} ]; do
              ps aux | grep PM2 | grep Daemon
              if [ $? = 0 ]; then 
                break
              fi
              sleep 1
              timeout=`expr ${timeout} + 1`
            done
            if [ ${timeout} == ${maxto} ]; then
              echo "Timed out waiting for PM2 Daemon (duration=`expr $maxto \* 1`s)."
              exit 1
            fi
          }
          service isc-dhcp-server start
          service rsyslog stop
          echo manual | sudo tee /etc/init/rsyslog.override
          if [ "#{ENV['MULTI']}" ]; then
            pm2 logs > /home/vagrant/src/build/vagrant.log &
          else
            pm2 logs > /home/vagrant/src/"#{ENV['REPO_NAME']}"/vagrant.log &
          fi
          waitForPM2Daemon
          pm2 start rackhd-pm2-config.yml
        SHELL


    end
end
